<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mydemo.mapper.UserMapper">
	
<resultMap id="User_Result"  type="com.example.mydemo.pojo.User">
	<result property="sid" column="sid" jdbcType="INTEGER"/>
	<result property="userName" column="userName" jdbcType="VARCHAR"/>
	<result property="password" column="password" jdbcType="VARCHAR"/>
	<result property="nickName" column="nickName" jdbcType="VARCHAR"/>
	<result property="status" column="status" jdbcType="INTEGER"/>
	<result property="creatTime" column="creatTime" jdbcType="TIMESTAMP"/>
	<result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
	<result property="creatBy" column="creatBy" jdbcType="INTEGER"/>
	<result property="updateBy" column="updateBy" jdbcType="INTEGER"/>
</resultMap>

<sql id="baseWhereClause">
	<where>
		<if test="sids != null"> 
			 SID IN
			<foreach collection="sids" item="sidItem" open="(" separator="," close=")">
				#{sidItem,jdbcType=DECIMAL}
			</foreach>
		</if>
		<if test="sid != null">
			 AND sid = #{sid,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			 AND userName = #{userName,jdbcType=VARCHAR}
		</if>
		<if test="password != null">
			 AND password = #{password,jdbcType=VARCHAR}
		</if>
		<if test="nickName != null">
			 AND nickName = #{nickName,jdbcType=VARCHAR}
		</if>
		<if test="status != null">
			 AND status = #{status,jdbcType=INTEGER}
		</if>
		<if test="creatTime != null">
			 AND creatTime = #{creatTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateTime != null">
			 AND updateTime = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="creatBy != null">
			 AND creatBy = #{creatBy,jdbcType=INTEGER}
		</if>
		<if test="updateBy != null">
			 AND updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</where>
	<if test="orderBy != null">
		 ORDER BY ${orderBy}
	</if>
	<if test="orderBy == null">
		 ORDER BY SID ASC 
	</if>
</sql>

 

<select id="selectByMap" parameterType="map" resultMap="User_Result">
	SELECT 
	 sid,
	 userName,
	 password,
	 nickName,
	 status,
	 creatTime,
	 updateTime,
	 creatBy,
	 updateBy
	FROM ${schema}.user  
<if test="_parameter != null">
	<include refid="baseWhereClause" />
</if>
</select> 
 
<insert id="insert"  useGeneratedKeys="true" keyProperty="sid"  parameterType="com.example.mydemo.pojo.User">
	INSERT INTO  ${schema}.user  
	(
	 sid,
	 userName,
	 password,
	 nickName,
	 status,
	 creatTime,
	 updateTime,
	 creatBy,
	 updateBy
	)
	VALUES
	(
		#{sid,jdbcType=INTEGER}
	 	,
		#{userName,jdbcType=VARCHAR}
	 	,
		#{password,jdbcType=VARCHAR}
	 	,
		#{nickName,jdbcType=VARCHAR}
	 	,
		#{status,jdbcType=INTEGER}
	 	,
		#{creatTime,jdbcType=TIMESTAMP}
	 	,
		#{updateTime,jdbcType=TIMESTAMP}
	 	,
		#{creatBy,jdbcType=INTEGER}
	 	,
		#{updateBy,jdbcType=INTEGER}
	 	
	) 
</insert>



<insert id="insertList"  parameterType="map">  
  
	INSERT INTO  ${schema}.user  
	(
	 sid,
	 userName,
	 password,
	 nickName,
	 status,
	 creatTime,
	 updateTime,
	 creatBy,
	 updateBy
	)
	VALUES
	 <foreach collection="list" item="item" index="index" separator=",">
        (
		#{item.sid,jdbcType=INTEGER}
	 	,
		#{item.userName,jdbcType=VARCHAR}
	 	,
		#{item.password,jdbcType=VARCHAR}
	 	,
		#{item.nickName,jdbcType=VARCHAR}
	 	,
		#{item.status,jdbcType=INTEGER}
	 	,
		#{item.creatTime,jdbcType=TIMESTAMP}
	 	,
		#{item.updateTime,jdbcType=TIMESTAMP}
	 	,
		#{item.creatBy,jdbcType=INTEGER}
	 	,
		#{item.updateBy,jdbcType=INTEGER}
	 	
        )  
         
    </foreach>  
    
</insert>  
 

<update id="update" parameterType="com.example.mydemo.pojo.User">
UPDATE
${schema}.user  
	<set>
		<if test="sid != null">
			sid = #{sid,jdbcType=INTEGER},
		</if>
		<if test="userName != null">
			userName = #{userName,jdbcType=VARCHAR},
		</if>
		<if test="password != null">
			password = #{password,jdbcType=VARCHAR},
		</if>
		<if test="nickName != null">
			nickName = #{nickName,jdbcType=VARCHAR},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="creatTime != null">
			creatTime = #{creatTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			updateTime = #{updateTime,jdbcType=TIMESTAMP},
		</if>
		<if test="creatBy != null">
			creatBy = #{creatBy,jdbcType=INTEGER},
		</if>
		<if test="updateBy != null">
			updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</set>
	 	 WHERE
	 	 SID = #{sid,jdbcType=DECIMAL} 
		
</update>

<update id="updateByMap" parameterType="map">
UPDATE
${schema}.user  
	<set>
		<if test="sid != null">
			sid = #{sid,jdbcType=INTEGER},
		</if>
		<if test="userName != null">
			userName = #{userName,jdbcType=VARCHAR},
		</if>
		<if test="password != null">
			password = #{password,jdbcType=VARCHAR},
		</if>
		<if test="nickName != null">
			nickName = #{nickName,jdbcType=VARCHAR},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="creatTime != null">
			creatTime = #{creatTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			updateTime = #{updateTime,jdbcType=TIMESTAMP},
		</if>
		<if test="creatBy != null">
			creatBy = #{creatBy,jdbcType=INTEGER},
		</if>
		<if test="updateBy != null">
			updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</set>
		<where>
		<if test="_parameter == null">
			1=0
		</if>
		<if test="sid != null">
			sid = #{sid,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			AND userName = #{userName,jdbcType=VARCHAR}
		</if>
		<if test="password != null">
			AND password = #{password,jdbcType=VARCHAR}
		</if>
		<if test="nickName != null">
			AND nickName = #{nickName,jdbcType=VARCHAR}
		</if>
		<if test="status != null">
			AND status = #{status,jdbcType=INTEGER}
		</if>
		<if test="creatTime != null">
			AND creatTime = #{creatTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateTime != null">
			AND updateTime = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="creatBy != null">
			AND creatBy = #{creatBy,jdbcType=INTEGER}
		</if>
		<if test="updateBy != null">
			AND updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</where>
		
</update>


<update id="updateList"  parameterType="java.util.List">  
        
          <foreach collection="list" item="item" index="index" open="" close="" separator=";">  
           UPDATE
	${schema}.user  
	<set>
		<if test="sid != null">
			sid = #{sid,jdbcType=INTEGER},
		</if>
		<if test="userName != null">
			userName = #{userName,jdbcType=VARCHAR},
		</if>
		<if test="password != null">
			password = #{password,jdbcType=VARCHAR},
		</if>
		<if test="nickName != null">
			nickName = #{nickName,jdbcType=VARCHAR},
		</if>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="creatTime != null">
			creatTime = #{creatTime,jdbcType=TIMESTAMP},
		</if>
		<if test="updateTime != null">
			updateTime = #{updateTime,jdbcType=TIMESTAMP},
		</if>
		<if test="creatBy != null">
			creatBy = #{creatBy,jdbcType=INTEGER},
		</if>
		<if test="updateBy != null">
			updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</set>
	 WHERE
	 	 SID = #{sid,jdbcType=DECIMAL} 
         </foreach>  
            
    </update>  
    
    

<delete id="delete"  parameterType="map">
DELETE FROM
	${schema}.user  
WHERE  SID = #{sid,jdbcType=DECIMAL} 
</delete>


<delete id="deleteByMap"  parameterType="map">
DELETE FROM
	${schema}.user  
	<where>
		<if test="_parameter == null">
		  	1=0
		</if>
		<if test="sids != null">
					sid IN
					<foreach collection="sids" item="sidItem" open="(" separator="," close=")">
						#{sidItem,jdbcType=DECIMAL}
					</foreach>
		</if>
		
		<if test="sid != null">
			sid = #{sid,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			AND userName = #{userName,jdbcType=VARCHAR}
		</if>
		<if test="password != null">
			AND password = #{password,jdbcType=VARCHAR}
		</if>
		<if test="nickName != null">
			AND nickName = #{nickName,jdbcType=VARCHAR}
		</if>
		<if test="status != null">
			AND status = #{status,jdbcType=INTEGER}
		</if>
		<if test="creatTime != null">
			AND creatTime = #{creatTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateTime != null">
			AND updateTime = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="creatBy != null">
			AND creatBy = #{creatBy,jdbcType=INTEGER}
		</if>
		<if test="updateBy != null">
			AND updateBy = #{updateBy,jdbcType=INTEGER}
		</if>
	</where>
</delete>

 

</mapper>